je_colonial_administration_button_lacertia = {
	name = "je_colonial_administration_button_lacertia"
	desc = "je_colonial_administration_button_lacertia_desc"

	visible = {
		country_is_in_africa = no
		country_is_in_kailando = no
		any_scope_state = {
			region = sr:region_lacertia
		}
		NOT = {
			any_subject_or_below = {
				has_variable = lacertia_subject_var
			}
		}
	}

	possible = {
		any_scope_state = {
			region = sr:region_lacertia
			is_largest_state_in_region = yes
			count >= 2
		}

		#prevents splitting off during diplo play or war as it invalidates wargoals. is_at_war is there for clarity for players even though it's technically included in the former
		is_diplomatic_play_committed_participant = no
		is_at_war = no

		custom_tooltip = {
			text = colonial_administration_cooldown
			NOT = {
				any_subject_or_below = {
					has_variable = newly_formed_colonial_nation_var
				}
			}
		}
	}

	ai_chance = {
		value = 100
	}

	effect = {
		if = {
			limit = {
				any_scope_state = {
					region = sr:region_lacertia
					has_decree = decree_greener_grass_campaign
				}
			}
			random_scope_state = {
				limit = {
					region = sr:region_lacertia
					has_decree = decree_greener_grass_campaign
				}
				save_scope_as = newly_formed_colonial_nation_capital_scope
			}
		}
		else = {
			random_scope_state = {
				limit = {
					region = sr:region_lacertia
				}
				save_scope_as = newly_formed_colonial_nation_capital_scope
			}
		}
		every_scope_state = {
			limit = {
				region = sr:region_lacertia
			}
			set_variable = state_to_cede
		}
		create_dynamic_country = {
			origin = root
			country_type = colonial
			tier = principality
			capital = scope:newly_formed_colonial_nation_capital_scope
			cede_state_trigger = {
				has_variable = state_to_cede
			}
			on_created = { 
				set_variable = lacertia_subject_var
				set_variable = {
					name = newly_formed_colonial_nation_var
					months = 3
				}
				every_scope_state = {
					remove_variable = state_to_cede
				}
				activate_law = law_type:law_frontier_colonization
				activate_law = law_type:law_presidential_republic
			}
		}
		hidden_effect = {
			create_diplomatic_pact = {
				country = scope:newly_formed_colonial_nation_capital_scope.owner
				type = chartered_company
			}
		}
		trigger_event = { id = colonial_administration_events.1 days = 1 popup = yes }
		custom_tooltip = je_colonial_administration_button_tt_1
		custom_tooltip = je_colonial_administration_button_tt_2
	}
}

je_colonial_administration_button_elusive_coves = {
	name = "je_colonial_administration_button_elusive_coves"
	desc = "je_colonial_administration_button_elusive_coves_desc"

	visible = {
		country_is_in_africa = no
		country_is_in_kailando = no
		any_scope_state = {
			region = sr:region_elusive_coves
		}
		NOT = {
			any_subject_or_below = {
				has_variable = elusive_coves_subject_var
			}
		}
	}

	possible = {
		any_scope_state = {
			region = sr:region_elusive_coves
			is_largest_state_in_region = yes
			count >= 2
		}

		#prevents splitting off during diplo play or war as it invalidates wargoals. is_at_war is there for clarity for players even though it's technically included in the former
		is_diplomatic_play_committed_participant = no
		is_at_war = no

		custom_tooltip = {
			text = colonial_administration_cooldown
			NOT = {
				any_subject_or_below = {
					has_variable = newly_formed_colonial_nation_var
				}
			}
		}
	}

	ai_chance = {
		value = 100
	}

	effect = {
		if = {
			limit = {
				any_scope_state = {
					region = sr:region_elusive_coves
					has_decree = decree_greener_grass_campaign
				}
			}
			random_scope_state = {
				limit = {
					region = sr:region_elusive_coves
					has_decree = decree_greener_grass_campaign
				}
				save_scope_as = newly_formed_colonial_nation_capital_scope
			}
		}
		else = {
			random_scope_state = {
				limit = {
					region = sr:region_elusive_coves
				}
				save_scope_as = newly_formed_colonial_nation_capital_scope
			}
		}
		every_scope_state = {
			limit = {
				region = sr:region_elusive_coves
			}
			set_variable = state_to_cede
		}
		create_dynamic_country = {
			origin = root
			country_type = colonial
			tier = principality
			capital = scope:newly_formed_colonial_nation_capital_scope
			cede_state_trigger = {
				has_variable = state_to_cede
			}
			on_created = { 
				set_variable = elusive_coves_subject_var
				set_variable = {
					name = newly_formed_colonial_nation_var
					months = 3
				}
				every_scope_state = {
					remove_variable = state_to_cede
				}
				activate_law = law_type:law_frontier_colonization
				activate_law = law_type:law_presidential_republic
			}
		}
		hidden_effect = {
			create_diplomatic_pact = {
				country = scope:newly_formed_colonial_nation_capital_scope.owner
				type = chartered_company
			}
		}
		trigger_event = { id = colonial_administration_events.1 days = 1 popup = yes }
		custom_tooltip = je_colonial_administration_button_tt_1
		custom_tooltip = je_colonial_administration_button_tt_2
	}
}

# Expand Colonial Administration

je_colonial_administration_button_expand_lacertia = {
	name = "je_colonial_administration_button_expand_lacertia"
	desc = "je_colonial_administration_button_expand_lacertia_desc"

	visible = {
		country_is_in_africa = no
		any_subject_or_below = {
			has_variable = lacertia_subject_var
		}
	}

	possible = {
		#prevents expanding during diplo play or war as it invalidates wargoals. is_at_war is there for clarity for players even though it's technically included in the former
		is_diplomatic_play_committed_participant = no
		is_at_war = no
		
		OR = {
			any_scope_state = {
				region = sr:region_lacertia
				is_under_colonization = no
			}

			custom_tooltip = {
				text = colonial_transfer_two_subjects_tt
				any_subject_or_below = {
					has_variable = lacertia_subject_var
					count >= 2
				}
			}
		}
	}

	ai_chance = {
		value = 100
	}

	effect = {
		custom_tooltip = {
			text = transfer_stuff_to_subject_tt
		}
		random_subject_or_below = {
			limit = {
				has_variable = lacertia_subject_var
			}
			save_scope_as = colonial_transfer_subject_scope
		}
		if = {
			limit = {
				any_scope_state = {
					region = sr:region_lacertia
					is_under_colonization = no
				}
			}
			every_scope_state = {
				limit = {
					region = sr:region_lacertia
					is_under_colonization = no
				}
				set_state_owner = scope:colonial_transfer_subject_scope
			}
		}
		if = {
			limit = {
				any_subject_or_below = {
					has_variable = lacertia_subject_var
					count >= 2
				}
			}
			random_subject_or_below = {
				limit = {
					has_variable = lacertia_subject_var
				}
				save_scope_as = lacertia_subject_scope
			}
			random_subject_or_below = {
				limit = {
					has_variable = lacertia_subject_var
					NOT = {
						this = scope:lacertia_subject_scope
					}
				}
				save_scope_as = lacertia_subject_scope_2
			}
			scope:lacertia_subject_scope = {
				annex = scope:lacertia_subject_scope_2
			}
		}
	}
}
je_colonial_administration_button_expand_elusive_coves = {
	name = "je_colonial_administration_button_expand_elusive_coves"
	desc = "je_colonial_administration_button_expand_elusive_coves_desc"

	visible = {
		country_is_in_africa = no
		any_subject_or_below = {
			has_variable = elusive_coves_subject_var
		}
	}

	possible = {
		#prevents expanding during diplo play or war as it invalidates wargoals. is_at_war is there for clarity for players even though it's technically included in the former
		is_diplomatic_play_committed_participant = no
		is_at_war = no
		
		OR = {
			any_scope_state = {
				region = sr:region_elusive_coves
				is_under_colonization = no
			}

			custom_tooltip = {
				text = colonial_transfer_two_subjects_tt
				any_subject_or_below = {
					has_variable = elusive_coves_subject_var
					count >= 2
				}
			}
		}
	}

	ai_chance = {
		value = 100
	}

	effect = {
		custom_tooltip = {
			text = transfer_stuff_to_subject_tt
		}
		random_subject_or_below = {
			limit = {
				has_variable = elusive_coves_subject_var
			}
			save_scope_as = colonial_transfer_subject_scope
		}
		if = {
			limit = {
				any_scope_state = {
					region = sr:region_elusive_coves
					is_under_colonization = no
				}
			}
			every_scope_state = {
				limit = {
					region = sr:region_elusive_coves
					is_under_colonization = no
				}
				set_state_owner = scope:colonial_transfer_subject_scope
			}
		}
		if = {
			limit = {
				any_subject_or_below = {
					has_variable = elusive_coves_subject_var
					count >= 2
				}
			}
			random_subject_or_below = {
				limit = {
					has_variable = elusive_coves_subject_var
				}
				save_scope_as = elusive_coves_subject_scope
			}
			random_subject_or_below = {
				limit = {
					has_variable = elusive_coves_subject_var
					NOT = {
						this = scope:elusive_coves_subject_scope
					}
				}
				save_scope_as = elusive_coves_subject_scope_2
			}
			scope:elusive_coves_subject_scope = {
				annex = scope:elusive_coves_subject_scope_2
			}
		}
	}
}