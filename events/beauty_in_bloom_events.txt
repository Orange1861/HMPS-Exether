namespace = beauty_in_bloom

# Age of Roses startup event
beauty_in_bloom.1 = {
	type = country_event
	placement = ROOT
	
	title = beauty_in_bloom.1.t
	desc = beauty_in_bloom.1.d
	flavor = beauty_in_bloom.1.f
	
	event_image = {
		video = "europenorthamerica_art_gallery"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/ig_icons/devout.dds"
	
	duration = 3
	
	trigger = {
		# triggered by generic monthly pulse
		NOT = { has_variable = beauty_in_bloom_var }
		has_modifier = beauty_in_bloom_modifier
	}

	immediate = {
		set_variable = {
			name = beauty_in_bloom_var
			value = 0
		}
		set_variable = { 
			name = beauty_in_bloom_next 
			value = 0 
		}
		capital = {
			save_scope_as = capital_scope
		}
		set_global_variable = { # ensures military presidents aren't replaced super early
			name = continuismo_start_var
			days = long_modifier_time
		}
		ig:ig_devout ?= {
			save_scope_as = devout_scope
		}
		random_scope_character = {
			limit = {
				has_role = general
			}
			save_scope_as = general_scope
		}
		if = {
			limit = {
				ruler = {
					interest_group = {
						is_interest_group_type = ig_devout
					}
				}
			}
			ruler = {
				save_scope_as = powerful_beauty_in_bloom
			}
		}
		else = {
			ig:ig_devout ?= {
				leader = {
					save_scope_as = powerful_beauty_in_bloom
				}
			}
		}
	}
	option = { 
		name = beauty_in_bloom.1.a
		default_option = yes
		add_journal_entry = { type = je_beauty_in_bloom }
		change_variable = {
			name = beauty_in_bloom_var
			add = 600
		}
	}
}

# End of the beauty_in_bloom
beauty_in_bloom.2 = {
	type = country_event
	placement = ROOT
	
	title = beauty_in_bloom.2.t
	desc = beauty_in_bloom.2.d
	flavor = beauty_in_bloom.2.f
	
	event_image = {
		video = "unspecific_military_parade"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/ig_icons/devout.dds"
	
	duration = 3
	
	trigger = {
		# triggered by je_beauty_in_bloom
	}

	immediate = {
		ig:ig_devout ?= {
			save_scope_as = devout_scope
		}
	}
	option = { 
		name = beauty_in_bloom.2.a
		default_option = yes
		ig:ig_devout ?= {
			remove_ideology = ideology_chivalrous_conservative
			add_ideology = ideology_patriarchal
		}
		remove_modifier = beauty_in_bloom_modifier
	}
}

# The Fist Clenches
beauty_in_bloom.3 = {
	type = country_event
	placement = ROOT
	
	title = beauty_in_bloom.3.t
	desc = beauty_in_bloom.3.d
	flavor = beauty_in_bloom.3.f
	
	event_image = {
		video = "unspecific_military_parade"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/ig_icons/devout.dds"
	
	duration = 3
	
	trigger = {
		# triggered by je_beauty_in_bloom
	}

	immediate = {
		capital = {
			save_scope_as = capital_scope
		}
		ig:ig_devout ?= {
			save_scope_as = devout_scope
		}
		ruler = {
			save_scope_as = general_scope
		}
	}
	option = { 
		name = beauty_in_bloom.3.a
		default_option = yes
		hidden_effect = {
			remove_modifier = beauty_in_bloom_modifier
		}
		add_modifier = {
			name = beauty_in_bloom_modifier
			multiplier = 2
		}
	}
}

# Continuismo
beauty_in_bloom.4 = {
	type = country_event
	placement = ROOT
	
	title = beauty_in_bloom.4.t
	desc = beauty_in_bloom.4.d
	flavor = beauty_in_bloom.4.f
	
	event_image = {
		video = "unspecific_military_parade"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/ig_icons/devout.dds"
	
	duration = 3

	cooldown = { days = long_modifier_time }
	
	trigger = {
		# triggered by je_beauty_in_bloom
		NOT = { has_global_variable = continuismo_start_var }
		ruler = {
			interest_group = {
				is_interest_group_type = ig_devout
			}
			is_immortal = no
		}
		has_law = law_type:law_presidential_republic
		OR = {
			has_law = law_type:law_autocracy
			has_law = law_type:law_oligarchy
		}
		OR = {
			ig:ig_devout ?= {
				leader = {
					is_ruler = no
				}
			}
			any_scope_character = {
				OR = {
									has_role = general
					has_role = admiral
				}
				interest_group = {
					is_interest_group_type = ig_devout
				}
				is_ruler = no
			}
		}
	}

	immediate = {
		ig:ig_devout ?= {
			save_scope_as = devout_scope
		}
		ruler = {
			save_scope_as = ruler_scope
		}
		if = {
			limit = {
				ig:ig_devout ?= {
					leader = {
						is_ruler = no
					}
				}
			}
			ig:ig_devout ?= {
				leader = {
					save_scope_as = president_successor_scope
				}
			}
		}
		else_if = {
			limit = {
				any_scope_character = {
					OR = {
										has_role = general
						has_role = admiral
					}
					interest_group = {
						is_interest_group_type = ig_devout
					}
					is_ruler = no
				}
			}
			random_scope_character = {
				limit = {
					OR = {
										has_role = general
						has_role = admiral
					}
					interest_group = {
						is_interest_group_type = ig_devout
					}
					is_ruler = no
				}
				save_scope_as = president_successor_scope
			}
		}
	}
	option = {
		name = beauty_in_bloom.4.a
		default_option = yes
		custom_tooltip = {
			text = gain_large_beauty_in_bloom_points
			change_variable = {
				name = beauty_in_bloom_var
				add = 200
			}
		}
		ig:ig_devout ?= {
			add_modifier = {
				name = continuismo
				days = normal_modifier_time
			}
		}
		ai_chance = {
			base = 15
		}
	}
	option = { # his term is over, time to step down
		name = beauty_in_bloom.4.b
		custom_tooltip = {
			text = retire_ruler
			ruler = {
				kill_character = { hidden = yes }
			}
		}
		ig:ig_devout ?= {
			add_modifier = {
				name = no_continuismo
				days = normal_modifier_time
			}
		}
		custom_tooltip = {
			text = lose_large_beauty_in_bloom_points
			change_variable = {
				name = beauty_in_bloom_var
				add = -200
			}
		}
		ai_chance = {
			base = 3
		}
	}
	option = { # his successor takes over
		name = beauty_in_bloom.4.c
		scope:president_successor_scope = {
			set_character_as_ruler = yes
		}
		custom_tooltip = {
			text = gain_beauty_in_bloom_points
			change_variable = {
				name = beauty_in_bloom_var
				add = 100
			}
		}
		ai_chance = {
			base = 7
		}
	}
}

# Kingmaker
beauty_in_bloom.5 = {
	type = country_event
	placement = ROOT
	
	title = beauty_in_bloom.5.t
	desc = beauty_in_bloom.5.desc
	flavor = beauty_in_bloom.5.f
	
	event_image = {
		video = "unspecific_military_parade"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/ig_icons/devout.dds"
	
	duration = 3
	
	trigger = {
		# triggered by on_action
	}

	immediate = {
		ig:ig_devout ?= {
			save_scope_as = devout_scope
			leader = {
				save_scope_as = devout_leader
				set_variable = beauty_in_bloom_kingmaker
			}
		}
		py:conservative_party ?= {
			save_scope_as = conservative_party
		}
		py:liberal_party ?= {
			save_scope_as = liberal_party
		}
		if = {
			limit = {
				any_active_party = {
					is_party_type = communist_party
				}
			}
			py:communist_party = {
				save_scope_as = communist_party
			}
		}
		if = {
			limit = {
				any_active_party = {
					is_party_type = fascist_party
				}
			}
			py:fascist_party = {
				save_scope_as = fascist_party
			}
		}
	}
	option = { 
		name = beauty_in_bloom.5.a
		default_option = yes
		if = {
			limit = {
				has_journal_entry = je_beauty_in_bloom
			}
			custom_tooltip = {
				text = gain_beauty_in_bloom_points
				change_variable = {
					name = beauty_in_bloom_var
					add = 100
				}
			}
		}
		custom_tooltip = {
			text = devout_support_conservative
			ig:ig_devout ?= {
				leader = {
					set_variable = beauty_in_bloom_conservative
				}
			}
		}
		update_party_support = yes
	}
	option = { 
		name = beauty_in_bloom.5.b
		trigger = {
			exists = scope:liberal_party
		}
		if = {
			limit = {
				has_journal_entry = je_beauty_in_bloom
			}
			custom_tooltip = {
				text = gain_beauty_in_bloom_points
				change_variable = {
					name = beauty_in_bloom_var
					add = 100
				}
			}
		}
		custom_tooltip = {
			text = devout_support_liberal
			ig:ig_devout ?= {
				leader = {
					set_variable = beauty_in_bloom_liberal
				}
			}
		}
		update_party_support = yes
	}
	option = { 
		name = beauty_in_bloom.5.c
		trigger = {
			any_active_party = {
				is_party_type = communist_party
			}
			ig:ig_devout ?= {
				leader = {
					OR = {
						has_ideology = ideology:ideology_vanguardist
						has_ideology = ideology:ideology_communist
						has_ideology = ideology:ideology_anarchist
					}
				}
			}
		}
		highlighted_option = yes
		if = {
			limit = {
				has_journal_entry = je_beauty_in_bloom
			}
			custom_tooltip = {
				text = gain_beauty_in_bloom_points
				change_variable = {
					name = beauty_in_bloom_var
					add = 100
				}
			}
		}
		custom_tooltip = {
			text = devout_support_communist
			ig:ig_devout ?= {
				leader = {
					set_variable = beauty_in_bloom_communist
				}
			}
		}
		update_party_support = yes
	}
	option = { 
		name = beauty_in_bloom.5.d
		trigger = {
			any_active_party = {
				is_party_type = fascist_party
			}
			ig:ig_devout ?= {
				leader = {
					OR = {
						has_ideology = ideology:ideology_fascist
						has_ideology = ideology:ideology_ethno_nationalist
					}
				}
			}
		}
		highlighted_option = yes
		if = {
			limit = {
				has_journal_entry = je_beauty_in_bloom
			}
			custom_tooltip = {
				text = gain_beauty_in_bloom_points
				change_variable = {
					name = beauty_in_bloom_var
					add = 100
				}
			}
		}
		custom_tooltip = {
			text = devout_support_fascist
			ig:ig_devout ?= {
				leader = {
					set_variable = beauty_in_bloom_fascist
				}
			}
		}
		update_party_support = yes
	}

	cancellation_trigger = {
		NOT = {
			exists = scope:devout_leader
		}
	}
}

beauty_in_bloom.6 = {
	type = country_event
	placement = ROOT
	
	title = beauty_in_bloom.6.t
	desc = beauty_in_bloom.6.d
	flavor = beauty_in_bloom.6.f
	
	gui_window = event_window_2char

	left_icon = scope:leadership_challenge_commander
	right_icon = scope:leadership_challenge_politician

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/misc/2Characters"

	icon = "gfx/interface/icons/ig_icons/devout.dds"

	cooldown = { days = normal_modifier_time }
	
	duration = 3
	
	trigger = {
		has_journal_entry = je_beauty_in_bloom
		any_scope_character = {
			OR = {
				has_role = general
				has_role = admiral
			}
			popularity > interest_group.leader.popularity
			NOR = {
				has_trait = reserved
				has_trait = cautious
			}
			NOR = {
				has_role = politician
				is_ruler = yes
				is_heir = yes
			}
			this.interest_group = {
				leader = {
					NOR = {
						has_role = general
						has_role = admiral
					}
				}
			}
		}
	}

	immediate = {
		random_scope_character = {
			limit = {
				OR = {
					has_role = general
					has_role = admiral
				}
				popularity > interest_group.leader.popularity
				NOR = {
					has_trait = reserved
					has_trait = cautious
				}
				NOR = {
					has_role = politician
					is_ruler = yes
					is_heir = yes
				}
				this.interest_group = {
					leader = {
						NOR = {
							has_role = general
							has_role = admiral
						}
					}
				}
			}
			save_scope_as = leadership_challenge_commander
			this.interest_group = {
				save_scope_as = leadership_challenge_ig
				leader = {
					save_scope_as = leadership_challenge_politician
				}
			}
		}
	}
	option = { 
		name = beauty_in_bloom.6.a
		default_option = yes
		if = {
			limit = {
				empty_agitator_slots >= 1
				NOT = {
					scope:leadership_challenge_politician = {
						has_ideology = ideology:ideology_moderate
					}
				}
			}
			scope:leadership_challenge_politician = {
				remove_character_role = politician
				add_character_role = agitator
			}
		}
		else = {
			custom_tooltip = politician_gets_pushed_out_tt
		}
		scope:leadership_challenge_commander = {
			add_character_role = politician
			set_as_interest_group_leader = yes
		}
		custom_tooltip = {
			text = gain_beauty_in_bloom_points
			change_variable = {
				name = beauty_in_bloom_var
				add = 100
			}
		}
	}
	option = { 
		name = beauty_in_bloom.6.b
		custom_tooltip = {
			text = lose_beauty_in_bloom_points
			change_variable = {
				name = beauty_in_bloom_var
				add = -100
			}
		}
	}
}